<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAeAAAAHgCAYAAAB91L6VAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAABA7SURBVHhe7d3Ljl3HYYVhzYM4suXnCAQoPG3DGlDsRhwlQPzISQZJfNEl9msEjmw2iYSeON2t
        UzTZPHv1uexLXb4PWAOSI+2uql8cCPoIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        mM+rm2c3L693n+x/CTTku+effnx7ffXF/pdAK16/+LsvX13v/u9u//Xy+Wc/3v820ID/ufnsb17d7H55
        d3/fvL65+sX+t4HavRPfP+8nwtCId+Jb7q8IQwsOxLdMhKFyB+JbJsJQsxDfMhGGSoX4lokw1OiI+JaJ
        MFTmiPiWiTDU5PUXV/94dzGPiW+ZCEMlTohvmQhDDc6Ib5kIw8bOiG+ZCMOWLohvmQjDRi6Ib5kIwxZm
        iG+ZCMPKZohvmQjDmmaMb5kIw0pmjG+ZCMMaFohvmQjDwhaIb5kIw5IWjG+ZCMNCFoxvmQjDElaIb5kI
        w8xWiG+ZCMOcVoxvmQjDTFaMb5kIwxw2iG+ZCMOFNohvmQjDJTaMb5kIw5k2jG+ZCMM5KohvmQjDiSqI
        b5kIwykqim+ZCMORKopvmQjDMSqMb5kIwxMqjG+ZCENScXzLRBgmVBzfMhGGQxqIb5kIwyMNxLdMhOFd
        DcW3TIRhr6H4lokw3GswvmUizPAajG+ZCDO2huNbJsIMq+H4lokwY+ogvmUizHA6iG+ZCDOWjuJbJsIM
        o6P4lokwY+gwvmUiTPc6jG+ZCNO3juNbJsJ0q+P4lokwfXp9s/unuwPec3zLRJjuDBDfMhGmLwPFt0yE
        6cZA8S0TYfowYHzLRJjmDRjfMhGmbQPHt0yEadbA8S0TYdokvm8nwjRHfN9OhGmL+H4wEaYZ4vvBRJg2
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>